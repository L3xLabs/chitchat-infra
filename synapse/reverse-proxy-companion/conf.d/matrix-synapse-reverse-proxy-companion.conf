




# Maps from https://tcpipuk.github.io/synapse/deployment/nginx.html#mapsconf
# Client username from access token
map $arg_access_token $accesstoken_from_urlparam {
  default                    $arg_access_token;
  "~syt_(?<username>.*?)_.*" $username;
}
# Client username from MXID
map $http_authorization $mxid_localpart {
  default                           $http_authorization;
  "~Bearer syt_(?<username>.*?)_.*" $username;
  ""                                $accesstoken_from_urlparam;
}
# Whether to upgrade HTTP connection
map $http_upgrade $connection_upgrade {
  default upgrade;
  '' close;
}
#Extract room name from URI
map $request_uri $room_name {
  ~^/_matrix/(client|federation)/.*?(?:%21|!)(?<room>[A-Za-z0-9._=\-\/]+)(?::|%3A)[A-Za-z0-9._=\-\/]+ $room;
}
# End maps

	# Round Robin "upstream" pools for workers

		upstream room_workers_upstream {
		hash $room_name consistent;
		keepalive 2;
			server "matrix-synapse-worker-room-0:28111";
	}

		upstream sync_workers_upstream {
		hash $mxid_localpart consistent;
		keepalive 2;
			server "matrix-synapse-worker-sync-0:28211";
	}

		upstream client_reader_workers_upstream {
		least_conn;
		keepalive 2;
			server "matrix-synapse-worker-client-reader-0:28311";
	}

		upstream federation_reader_workers_upstream {
		hash $http_x_forwarded_for;
		keepalive 2;
			server "matrix-synapse-worker-federation-reader-0:28411";
	}


	

		upstream stream_writer_typing_stream_workers_upstream {
		
		keepalive 2;
			server "matrix-synapse-worker-stream-writer-1-typing:20012";
	}

		upstream stream_writer_to_device_stream_workers_upstream {
		
		keepalive 2;
			server "matrix-synapse-worker-stream-writer-2-to-device:20013";
	}

		upstream stream_writer_account_data_stream_workers_upstream {
		
		keepalive 2;
			server "matrix-synapse-worker-stream-writer-3-account-data:20014";
	}

		upstream stream_writer_receipts_stream_workers_upstream {
		
		keepalive 2;
			server "matrix-synapse-worker-stream-writer-4-receipts:20015";
	}

		upstream stream_writer_presence_stream_workers_upstream {
		
		keepalive 2;
			server "matrix-synapse-worker-stream-writer-5-presence:20016";
	}


		upstream media_repository_workers_upstream {
		least_conn;
		keepalive 2;
			server "matrix-synapse-worker-media-repository-0:18551";
	}


		upstream user_dir_workers_upstream {
		
		keepalive 2;
			server "matrix-synapse-worker-user-dir-0:18661";
	}


server {
	listen 8008;
	server_name matrix-synapse-reverse-proxy-companion;

	server_tokens off;
	root /dev/null;

	gzip on;
	gzip_types text/plain application/json;

		# Client-server overrides -- These locations must go to the main Synapse process
		location ~ ^/_matrix/client/(api/v1|r0|v3|unstable)/(account/3pid/|directory/list/room/|pushrules/|rooms/[^/]+/(forget|upgrade|report)|login/sso/redirect/|register) {
			resolver 127.0.0.11 valid=5s;
			set $backend "matrix-synapse:8008";
			proxy_pass http://$backend;

			proxy_set_header Host $host;

			client_body_buffer_size 25M;
			client_max_body_size 50M;
			proxy_max_temp_file_size 0;
		}

		# Client-server SSO overrides -- These locations must go to the main Synapse process
		location ~ ^(/_matrix/client/(api/v1|r0|v3|unstable)/login/sso/redirect|/_synapse/client/(pick_username|(new_user_consent|oidc/callback|pick_idp|sso_register)$)) {
			resolver 127.0.0.11 valid=5s;
			set $backend "matrix-synapse:8008";
			proxy_pass http://$backend;

			proxy_set_header Host $host;

			client_body_buffer_size 25M;
			client_max_body_size 50M;
			proxy_max_temp_file_size 0;
		}



			# https://matrix-org.github.io/synapse/latest/workers.html#the-typing-stream
				location ~ ^/_matrix/client/(api/v1|r0|v3|unstable)/rooms/.*/typing {
		proxy_pass http://stream_writer_typing_stream_workers_upstream$request_uri;
		proxy_set_header Host $host;
		proxy_http_version 1.1;
		proxy_set_header Connection "";
	}


			# https://matrix-org.github.io/synapse/latest/workers.html#the-to_device-stream
				location ~ ^/_matrix/client/(r0|v3|unstable)/sendToDevice/ {
		proxy_pass http://stream_writer_to_device_stream_workers_upstream$request_uri;
		proxy_set_header Host $host;
		proxy_http_version 1.1;
		proxy_set_header Connection "";
	}


			# https://matrix-org.github.io/synapse/latest/workers.html#the-account_data-stream
				location ~ ^/_matrix/client/(r0|v3|unstable)/.*/tags {
		proxy_pass http://stream_writer_account_data_stream_workers_upstream$request_uri;
		proxy_set_header Host $host;
		proxy_http_version 1.1;
		proxy_set_header Connection "";
	}
	location ~ ^/_matrix/client/(r0|v3|unstable)/.*/account_data {
		proxy_pass http://stream_writer_account_data_stream_workers_upstream$request_uri;
		proxy_set_header Host $host;
		proxy_http_version 1.1;
		proxy_set_header Connection "";
	}


			# https://matrix-org.github.io/synapse/latest/workers.html#the-receipts-stream
				location ~ ^/_matrix/client/(r0|v3|unstable)/rooms/.*/receipt {
		proxy_pass http://stream_writer_receipts_stream_workers_upstream$request_uri;
		proxy_set_header Host $host;
		proxy_http_version 1.1;
		proxy_set_header Connection "";
	}
	location ~ ^/_matrix/client/(r0|v3|unstable)/rooms/.*/read_markers {
		proxy_pass http://stream_writer_receipts_stream_workers_upstream$request_uri;
		proxy_set_header Host $host;
		proxy_http_version 1.1;
		proxy_set_header Connection "";
	}


			# https://matrix-org.github.io/synapse/latest/workers.html#the-presence-stream
				location ~ ^/_matrix/client/(api/v1|r0|v3|unstable)/presence/ {
		proxy_pass http://stream_writer_presence_stream_workers_upstream$request_uri;
		proxy_set_header Host $host;
		proxy_http_version 1.1;
		proxy_set_header Connection "";
	}


			# room workers
			# https://tcpipuk.github.io/synapse/deployment/workers.html
			# https://tcpipuk.github.io/synapse/deployment/nginx.html#locationsconf
				location ~ ^/_matrix/client/.*?!(?<room>[A-Za-z0-9._=\-\/]+):[A-Za-z0-9.\-]+ {
		proxy_pass http://room_workers_upstream$request_uri;
		proxy_set_header Host $host;
		proxy_http_version 1.1;
		proxy_set_header Connection "";
	}


			# sync workers
			# https://tcpipuk.github.io/synapse/deployment/workers.html
			# https://tcpipuk.github.io/synapse/deployment/nginx.html#locationsconf
				location ~ ^/_matrix/client/(api/v1|r0|v3|unstable)/(sync|events|initialSync|rooms/[^/]+/initialSync)$ {
		proxy_pass http://sync_workers_upstream$request_uri;
		proxy_set_header Host $host;
		proxy_http_version 1.1;
		proxy_set_header Connection "";
	}


			# client_reader workers
			# https://tcpipuk.github.io/synapse/deployment/workers.html
			# https://tcpipuk.github.io/synapse/deployment/nginx.html#locationsconf
				location ~ ^/_matrix/client/(api/v1|r0|v3|unstable)/(room_keys/|keys/(query|changes|claim|upload/|room_keys/)|login|register(/available|/m.login.registration_token/validity|)|password_policy|profile|rooms/.*/(joined_members|context/.*|members|state|hierarchy|relations/|event/|aliases|timestamp_to_event|redact|send|state/|(join|invite|leave|ban|unban|kick))|createRoom|publicRooms|account/(3pid|whoami|devices)|versions|voip/turnServer|joined_rooms|search|user/.*/filter(/|$)|directory/room/.*|capabilities) {
		proxy_pass http://client_reader_workers_upstream$request_uri;
		proxy_set_header Host $host;
		proxy_http_version 1.1;
		proxy_set_header Connection "";
	}


			# https://matrix-org.github.io/synapse/latest/workers.html#synapseappmedia_repository
			location ~ ^/_matrix/media/ {
				proxy_pass http://media_repository_workers_upstream$request_uri;
				proxy_set_header Host $host;

				client_body_buffer_size 25M;
				client_max_body_size 50M;
				proxy_max_temp_file_size 0;

			}
			location ~ ^/_matrix/client/v1/media/ {
				proxy_pass http://media_repository_workers_upstream$request_uri;
				proxy_set_header Host $host;

				client_body_buffer_size 25M;
				client_max_body_size 50M;
				proxy_max_temp_file_size 0;

			}
			location ~ ^/_matrix/federation/v1/media/ {
				proxy_pass http://media_repository_workers_upstream$request_uri;
				proxy_set_header Host $host;

				client_body_buffer_size 25M;
				client_max_body_size 50M;
				proxy_max_temp_file_size 0;

			}
			location ~ ^/_synapse/admin/v1/purge_media_cache$ {
				proxy_pass http://media_repository_workers_upstream$request_uri;
				proxy_set_header Host $host;

				client_body_buffer_size 25M;
				client_max_body_size 50M;
				proxy_max_temp_file_size 0;

			}
			location ~ ^/_synapse/admin/v1/room/.*/media.*$ {
				proxy_pass http://media_repository_workers_upstream$request_uri;
				proxy_set_header Host $host;

				client_body_buffer_size 25M;
				client_max_body_size 50M;
				proxy_max_temp_file_size 0;

			}
			location ~ ^/_synapse/admin/v1/user/.*/media.*$ {
				proxy_pass http://media_repository_workers_upstream$request_uri;
				proxy_set_header Host $host;

				client_body_buffer_size 25M;
				client_max_body_size 50M;
				proxy_max_temp_file_size 0;

			}
			location ~ ^/_synapse/admin/v1/media/.*$ {
				proxy_pass http://media_repository_workers_upstream$request_uri;
				proxy_set_header Host $host;

				client_body_buffer_size 25M;
				client_max_body_size 50M;
				proxy_max_temp_file_size 0;

			}
			location ~ ^/_synapse/admin/v1/quarantine_media/.*$ {
				proxy_pass http://media_repository_workers_upstream$request_uri;
				proxy_set_header Host $host;

				client_body_buffer_size 25M;
				client_max_body_size 50M;
				proxy_max_temp_file_size 0;

			}
			location ~ ^/_synapse/admin/v1/users/.*/media$ {
				proxy_pass http://media_repository_workers_upstream$request_uri;
				proxy_set_header Host $host;

				client_body_buffer_size 25M;
				client_max_body_size 50M;
				proxy_max_temp_file_size 0;

			}

			# https://matrix-org.github.io/synapse/latest/workers.html#updating-the-user-directory
				location ~ ^/_matrix/client/(r0|v3|unstable)/user_directory/search$ {
		proxy_pass http://user_dir_workers_upstream$request_uri;
		proxy_set_header Host $host;
		proxy_http_version 1.1;
		proxy_set_header Connection "";
	}



	location / {
		resolver 127.0.0.11 valid=5s;
		set $backend "matrix-synapse:8008";
		proxy_pass http://$backend;

		proxy_set_header Host $host;

		client_body_buffer_size 25M;
		client_max_body_size 50M;
		proxy_max_temp_file_size 0;
	}
}

server {
	listen 8048;
	server_name matrix-synapse-reverse-proxy-companion;

	server_tokens off;

	root /dev/null;

	gzip on;
	gzip_types text/plain application/json;

		# Federation overrides -- These locations must go to the main Synapse process
		location ~ ^/_matrix/federation/v1/openid/userinfo$ {
			resolver 127.0.0.11 valid=5s;
			set $backend "matrix-synapse:8048";
			proxy_pass http://$backend;

			proxy_set_header Host $host;

			client_body_buffer_size 25M;
			client_max_body_size 150M;
			proxy_max_temp_file_size 0;
		}

			# https://tcpipuk.github.io/synapse/deployment/workers.html
				location ~ ^/_matrix/federation/v[12]/(?:state_ids|get_missing_events)/(?:%21|!)(?<room>[A-Za-z0-9._=\-\/]+)(:|%3A)[A-Za-z0-9.\-]+ {
		proxy_pass http://room_workers_upstream$request_uri;
		proxy_set_header Host $host;
		proxy_http_version 1.1;
		proxy_set_header Connection "";
	}

			# https://tcpipuk.github.io/synapse/deployment/workers.html
				location ~ ^/_matrix/(federation/(v1|v2)|key/v2)/ {
		proxy_pass http://federation_reader_workers_upstream$request_uri;
		proxy_set_header Host $host;
		proxy_http_version 1.1;
		proxy_set_header Connection "";
	}

			# https://matrix-org.github.io/synapse/latest/workers.html#synapseappmedia_repository
			location ~ ^/_matrix/media/ {
				proxy_pass http://media_repository_workers_upstream$request_uri;
				proxy_set_header Host $host;

				client_body_buffer_size 25M;
				client_max_body_size 150M;
				proxy_max_temp_file_size 0;

			}
			location ~ ^/_matrix/client/v1/media/ {
				proxy_pass http://media_repository_workers_upstream$request_uri;
				proxy_set_header Host $host;

				client_body_buffer_size 25M;
				client_max_body_size 150M;
				proxy_max_temp_file_size 0;

			}
			location ~ ^/_matrix/federation/v1/media/ {
				proxy_pass http://media_repository_workers_upstream$request_uri;
				proxy_set_header Host $host;

				client_body_buffer_size 25M;
				client_max_body_size 150M;
				proxy_max_temp_file_size 0;

			}
			location ~ ^/_synapse/admin/v1/purge_media_cache$ {
				proxy_pass http://media_repository_workers_upstream$request_uri;
				proxy_set_header Host $host;

				client_body_buffer_size 25M;
				client_max_body_size 150M;
				proxy_max_temp_file_size 0;

			}
			location ~ ^/_synapse/admin/v1/room/.*/media.*$ {
				proxy_pass http://media_repository_workers_upstream$request_uri;
				proxy_set_header Host $host;

				client_body_buffer_size 25M;
				client_max_body_size 150M;
				proxy_max_temp_file_size 0;

			}
			location ~ ^/_synapse/admin/v1/user/.*/media.*$ {
				proxy_pass http://media_repository_workers_upstream$request_uri;
				proxy_set_header Host $host;

				client_body_buffer_size 25M;
				client_max_body_size 150M;
				proxy_max_temp_file_size 0;

			}
			location ~ ^/_synapse/admin/v1/media/.*$ {
				proxy_pass http://media_repository_workers_upstream$request_uri;
				proxy_set_header Host $host;

				client_body_buffer_size 25M;
				client_max_body_size 150M;
				proxy_max_temp_file_size 0;

			}
			location ~ ^/_synapse/admin/v1/quarantine_media/.*$ {
				proxy_pass http://media_repository_workers_upstream$request_uri;
				proxy_set_header Host $host;

				client_body_buffer_size 25M;
				client_max_body_size 150M;
				proxy_max_temp_file_size 0;

			}
			location ~ ^/_synapse/admin/v1/users/.*/media$ {
				proxy_pass http://media_repository_workers_upstream$request_uri;
				proxy_set_header Host $host;

				client_body_buffer_size 25M;
				client_max_body_size 150M;
				proxy_max_temp_file_size 0;

			}


	location / {
		resolver 127.0.0.11 valid=5s;
		set $backend "matrix-synapse:8048";
		proxy_pass http://$backend;

		proxy_set_header Host $host;

		client_body_buffer_size 25M;
		client_max_body_size 150M;
		proxy_max_temp_file_size 0;
	}
}
